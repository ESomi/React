[{"C:\\Users\\some7\\react-tutorials\\contact-app\\src\\index.js":"1","C:\\Users\\some7\\react-tutorials\\contact-app\\src\\App.js":"2","C:\\Users\\some7\\react-tutorials\\contact-app\\src\\reportWebVitals.js":"3","C:\\Users\\some7\\react-tutorials\\contact-app\\src\\components\\PhoneForm.js":"4","C:\\Users\\some7\\react-tutorials\\contact-app\\src\\components\\PhoneInfoList.js":"5","C:\\Users\\some7\\react-tutorials\\contact-app\\src\\components\\PhoneInfo.js":"6"},{"size":612,"mtime":1609106286536,"results":"7","hashOfConfig":"8"},{"size":2051,"mtime":1610006495483,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1234,"mtime":1610006134431,"results":"11","hashOfConfig":"8"},{"size":721,"mtime":1609947765076,"results":"12","hashOfConfig":"8"},{"size":3274,"mtime":1609976906136,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1kr25bs",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\Users\\some7\\react-tutorials\\contact-app\\src\\index.js",[],["30","31"],"C:\\Users\\some7\\react-tutorials\\contact-app\\src\\App.js",["32"],"import React, { Component } from 'react';\nimport PhoneForm from './components/PhoneForm';\nimport PhoneInfo from './components/PhoneInfo';\nimport PhoneInfoList from './components/PhoneInfoList';\n\nclass App extends Component {\n\n  id = 3;\n  \n  state = {\n    information: [\n      {\n        id: 0,\n        name: '로제스',\n        phone: '010-000-0001'\n      },\n      {\n        id: 1,\n        name: '홍당무',\n        phone: '010-000-0002'\n      },\n      {\n        id: 2,\n        name: '잎새달',\n        phone: '010-000-0003'\n      },\n    ],\n    keyword: '',\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      keyword: e.target.value,\n    })\n  }\n\n  handleCreate = (data) => { \n    const {information} = this.state\n    this.setState({\n      information: information.concat({\n        ...data, // PhoneFrom.js에서 받은 { name: 'a', phone: '1',},\n        id: this.id++ // id: 0 을 객체에 넣은 후 1 증가\n      }) \n      //->information: [{ name: 'a', phone: '1', id: 0,}]\n    });\n  }\n\n  handleRemove = (id) => {\n    const {information} = this.state;\n    this.setState({\n      information: information.filter(\n        info => info.id !== id\n      )\n    })\n  }\n\n  handleUpdate = (id, data) => {\n    const {information} = this.state;\n    this.setState({\n      information: information.map(\n        info => {\n          if(info.id === id) {\n            return {\n              id,\n              ...data,\n            };\n          }\n          return info;\n        } \n      )\n    });\n  }\n\n  render() {     \n    return (\n      <div>\n        <PhoneForm onCreate={this.handleCreate}/>\n        <input \n          value={this.state.keyword}\n          onChange={this.handleChange}\n          placeholder=\"검색...\"\n\n          />\n        <PhoneInfoList \n          data={this.state.information.filter(\n            info => info.name.indexOf(this.state.keyword) > -1\n          )}\n          onRemove={this.handleRemove}\n          onUpdate={this.handleUpdate}\n        />\n        { JSON.stringify(this.state) }\n      </div> \n    );\n  }\n}\n\nexport default App;","C:\\Users\\some7\\react-tutorials\\contact-app\\src\\reportWebVitals.js",[],"C:\\Users\\some7\\react-tutorials\\contact-app\\src\\components\\PhoneForm.js",[],"C:\\Users\\some7\\react-tutorials\\contact-app\\src\\components\\PhoneInfoList.js",[],["33","34"],"C:\\Users\\some7\\react-tutorials\\contact-app\\src\\components\\PhoneInfo.js",["35"],"import React, { Component, Fragment } from 'react';\r\n\r\nclass PhoneInfo extends Component {\r\n\r\n    state ={\r\n        editing: false,\r\n        name: '',\r\n        phone: '',\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (this.state !== nextState) {\r\n            return true;\r\n        }\r\n        return this.props.info !== nextProps.info;\r\n    }\r\n    \r\n\r\n    handleRemove = () => {\r\n        const { info, onRemove } = this.props;\r\n        onRemove(info.id);\r\n    }\r\n\r\n    handleToggleEdit = () => { \r\n        \r\n        const { info, onUpdate } = this.props;\r\n        if (this.state.editing) { // true -> false (적용버튼 눌렀을 때)\r\n        onUpdate(info.id, {\r\n                name: this.state.name,\r\n                phone: this.state.phone,\r\n            });\r\n        /* props로 받은 handleUpdate함수 실행 :\r\n        info의 id값이 information배열의 id 값과 같을 때,\r\n        info의 id값과 state의 name과 phone값을 App.js의 state에 넣어 줌.\r\n        */\r\n        } else { // false -> true (수정버튼 눌렀을 때)\r\n            this.setState({\r\n                name: info.name,\r\n                phone: info.phone,\r\n            });\r\n        // state에 info의 name과 phone 값 넣어 줌.\r\n        } \r\n        \r\n        this.setState({\r\n            editing: !this.state.editing, // editing 값 반전 시킴.\r\n        }) \r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value //input 박스에서 받아 온 값들을 확인해서 state의 해당 키의 value로 넣어 줌.\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { name, phone, id } = this.props.info;\r\n        const { editing } = this.state;\r\n\r\n        const style = {\r\n            border: '1px solid black',\r\n            padding: '8px',\r\n            margin: '8px',\r\n        };  \r\n\r\n        console.log(name);\r\n\r\n        return (\r\n            <div style = {style}> \r\n             { JSON.stringify(this.state) }\r\n                {\r\n                    editing ? (\r\n                        <Fragment>\r\n                            <div>\r\n                                <input \r\n                                    name=\"name\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.name}/>\r\n                            </div>\r\n                            <div>\r\n                                <input \r\n                                    name=\"phone\" \r\n                                    onChange={this.handleChange} \r\n                                    value={this.state.phone}/>\r\n                            </div>\r\n                        </Fragment>\r\n                        \r\n                    ) : (\r\n                        <Fragment>\r\n                            <div><b>{name}</b></div>                \r\n                            <div><b>{phone}</b></div>\r\n                        </Fragment>\r\n                    )\r\n                }\r\n                <button onClick={this.handleRemove}>삭제</button>\r\n                <button onClick={this.handleToggleEdit}>\r\n                    { editing ? '적용' : '수정' }\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PhoneInfo;",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":17},{"ruleId":"36","replacedBy":"44"},{"ruleId":"38","replacedBy":"45"},{"ruleId":"40","severity":1,"message":"46","line":56,"column":30,"nodeType":"42","messageId":"43","endLine":56,"endColumn":32},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'PhoneInfo' is defined but never used.","Identifier","unusedVar",["47"],["48"],"'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]